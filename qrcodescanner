console.log(event_id);

Html5Qrcode.getCameras().then(devices => {
    var i = 0;
    /**
     * devices would be an array of objects of type:
     * { id: "id", label: "label" }
     */
    if (devices && devices.length) {
        var cameraId = '';
        //if(devices.length == 2){
          //  cameraId = devices[1].id; //back cammera
       // }else{
         //   cameraId = devices[0].id; //fornt cammera
       // }
        if(devices.length >= 2){
          cameraId = devices[devices.length-1].id;
        }else{
            cameraId = devices[0].id; //fornt cammera
        }
    //   alert(devices.length);
    }

const html5QrCode = new Html5Qrcode("reader");

html5QrCode.start(
  cameraId,     // retreived in the previous step.
  {
    fps: 10,    // sets the framerate to 10 frame per second
    qrbox: 250  // sets only 250 X 250 region of viewfinder to
                // scannable, rest shaded.
  },
  
  qrCodeMessage => {
    // do something when code is read. For example:
    // console.log(`QR Code detected: ${qrCodeMessage}`);
    // window.location.href = `save_qr/${qrCodeMessage}`;
    let person = prompt("Are you sure ", qrCodeMessage);
    if (scan_type == 'Attendance') {
      if(person != null){
        window.location.href = `attendance/${qrCodeMessage}/${event_id}`;
      }else{
        alert('Please valid scan');
      }
    } else {
      if(person != null){
        window.location.href = `users_list/${qrCodeMessage}`;
      }else{
        alert('Please valid scan');
      }
    }
    
    
  },

  errorMessage => {
    // parse error, ideally ignore it. For example:
    console.log(`QR Code no longer in front of camera.`);
  })
  
.catch(err => {
  // Start failed, handle it. For example,
  console.log(`Unable to start scanning, error: ${err}`);
});

html5QrCode.stop().then(ignore => {
    // QR Code scanning is stopped.
    console.log("QR Code scanning stopped.");
  }).catch(err => {
    // Stop failed, handle it.
    console.log("Unable to stop scanning.");
  });

}).catch(err => {
    // handle err
});
